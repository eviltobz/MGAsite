@model MGAsite.Models.EventParticipantsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>@Html.DisplayFor(model => model.Event.EventName) @Html.DisplayFor(model => model.Event.Season.SeasonName) Participants</h2>

<div>
    <h4>Event</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Event.EventName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EventName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.EventDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EventDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.EventType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EventType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.EventPriority)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EventPriority)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.Season.SeasonName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Season.SeasonName)
        </dd>

    </dl>
</div>
@if (Model.ParticipatingTeams.Any())
{
    var riderCount = 1;
    
    <hr />
    <h3>Participating Teams</h3>
    <table cellpadding="5">
        <thead>
            <tr>
                <th>Team</th>
                <th></th>
                <th>Rider 1</th>
                @if(Model.EventType != MGAsite.Models.Lookup.Individuals)
                { 
                    riderCount = 2;
                    <th>Rider 2</th>
                    if(Model.EventType == MGAsite.Models.Lookup.Team)
                    { 
                        riderCount = 5;
                        <th>Rider 3</th>
                        <th>Rider 4</th>
                        <th>Rider 5</th>
                    }
                }
            </tr>
        </thead>
        @foreach (var item in Model.ParticipatingTeams)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Team.TeamName)
                </td>
                <td>
                    @if(item.Under17s)
                    {
                        @:(Under 17s)
                    }
                    else
                    { 
                        @:(Open)
                    }
                </td>
                @foreach (var entrant in item.EventRiderEntries)
                {
                    <td>
                        @Html.DisplayFor(modelEntrant => entrant.Rider.FullName) 
                        <br/>
                        @Html.DisplayFor(modelEntrant => entrant.Pony.Name)
                    </td>
                }
                
                @for (int i = 0; i < (riderCount - item.EventRiderEntries.Count()); i++)
                {
                    <td>N/A</td>
                }
                <td>
                    | @Html.ActionLink("Edit", "Edit", "EventTeamEntry", new { id = item.Id }, null) 
                    | @Html.ActionLink("Delete", "DeleteParticipant", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
}
else
{
    using (Html.BeginForm("CopyPrevious", "Event"))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Id", Model.Event.Id)

        if (ViewBag.PreviousEventId == null)
        {
            <div>This event has been populated, can't copy an old event</div>
        }
        else
        {
            <hr />
            <div class="form-group">
                @Html.Label("Copy Previous Event", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownList("PreviousEventId")
                    <input type="submit" value="Copy" class="btn btn-default" />
            </div>
            <hr />

            @*
            <div class="form-group">
                @Html.Label("Copy Previous Event", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PreviousEvents", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
                
                <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Copy" class="btn btn-default" />
                </div>
            </div>*@
        }
    }
}

<hr />
<h3>Add Independent Entrants</h3>
<table cellpadding="5">
    <tr>
        <td>
            @Html.ActionLink("Add Under 17s", "AddTeam", new { eventId = Model.Event.Id, under17s = true })
        </td>
        <td>
            @Html.ActionLink("Add Open", "AddTeam", new { eventId = Model.Event.Id, under17s = false })
        </td>
    </tr>
</table>

@if (Model.OtherTeams.Any())
{
    <hr />
    <h3>Add Teams</h3>
    <table cellpadding="5">
        @foreach (var item in Model.OtherTeams)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Item1.TeamName)
                </td>
                <td>
                    @if(item.Item2)
                    {
                       @: | @Html.ActionLink("Add Under 17s", "AddTeam", new { eventId = Model.Event.Id, teamId = item.Item1.Id, under17s = true })
                    }
                    @if(item.Item3)
                    {
                       @: | @Html.ActionLink("Add Open", "AddTeam", new { eventId = Model.Event.Id, teamId = item.Item1.Id, under17s = false })
                    }
                </td>
            </tr>
        }
    </table>
}
<hr />
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
